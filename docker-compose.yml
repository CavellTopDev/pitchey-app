version: "3.8"

services:
  app:
    build:
      context: .
      args:
        GIT_REVISION: ${GIT_REVISION:-dev}
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/pitchey
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./static/uploads:/app/static/uploads

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: pitchey
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - redis_data:/data

  # Optional: Drizzle Studio for database management
  studio:
    image: node:18-alpine
    working_dir: /app
    volumes:
      - .:/app
    ports:
      - "4000:4000"
    command: npx drizzle-kit studio --host 0.0.0.0 --port 4000
    depends_on:
      - db

volumes:
  postgres_data:
  redis_data: