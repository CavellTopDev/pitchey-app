name: Deploy to Production

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
      - uses: actions/checkout@v3
      
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v2.x
      
      - name: Create .env
        run: |
          echo "DATABASE_URL=postgresql://postgres:password@localhost:5432/pitchey" >> .env
          echo "REDIS_URL=redis://localhost:6379" >> .env
          echo "JWT_SECRET=test-secret" >> .env
      
      # Skip migrations - database is managed via Neon console
      # - name: Run migrations
      #   run: deno task db:push
      
      - name: Run tests
        run: deno task test
      
      # Skip formatting and linting for now
      # - name: Check formatting
      #   run: deno fmt --check
      
      # - name: Run linter
      #   run: deno lint

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    permissions:
      id-token: write
      contents: read
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v2.x
      
      - name: Temporarily move .env.example
        run: mv .env.example .env.example.backup || true
      
      - name: Install deployctl
        run: npm install -g deployctl
        
      - name: Deploy to Deno Deploy
        env:
          DENO_DEPLOY_TOKEN: ${{ secrets.DENO_DEPLOY_TOKEN }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        run: |
          deployctl deploy \
            --project="pitchey-backend-fresh" \
            --entrypoint="working-server.ts" \
            --token="$DENO_DEPLOY_TOKEN" \
            --env="DATABASE_URL=$DATABASE_URL" \
            --env="JWT_SECRET=$JWT_SECRET" \
            --env="FRONTEND_URL=https://pitchey.netlify.app" \
            --env="UPSTASH_REDIS_REST_URL=${{ secrets.UPSTASH_REDIS_REST_URL }}" \
            --env="UPSTASH_REDIS_REST_TOKEN=${{ secrets.UPSTASH_REDIS_REST_TOKEN }}" \
            --env="CACHE_ENABLED=true" \
            --env="PORT=8000" \
            --env="NODE_ENV=production" \
            --env="DENO_ENV=production"
      
      - name: Restore .env.example
        if: always()
        run: mv .env.example.backup .env.example || true